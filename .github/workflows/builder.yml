---
name: Build OpenATV for SF8008

on:
  workflow_dispatch: # 允许手动触发

jobs:
  build:
    runs-on: ubuntu-22.04 # 使用 Ubuntu 22.04 运行器
    name: Build SF8008 Image
    timeout-minutes: 360 # 设置超时时间为 6 小时

    steps:
      # 移除了 'Checkout OpenATV Source' 步骤，因为它是空的，导致了 'uses' 或 'run' 错误。
      # 如果你的 workflow 文件在 openatv/enigma2 的 fork 仓库中，并且你需要访问该仓库的内容，
      # 那么你应该在此处添加以下行：
      # - name: Checkout current repository
      #   uses: actions/checkout@v4

      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y --no-install-recommends \
            autoconf automake bison bzip2 chrpath cmake coreutils cpio curl cvs \
            debianutils default-jre-headless diffstat flex g++ gawk gcc gcc-12 \
            gcc-multilib g++-multilib gettext git gzip help2man info iputils-ping java-common \
            libc6-dev libglib2.0-dev libncurses-dev libperl4-corelibs-perl libproc-processtable-perl \
            libsdl1.2-dev libserf-dev libtool libxml2-utils make ncurses-bin patch perl \
            pkg-config psmisc python3 python3-git python3-jinja2 python3-pexpect python3-pip \
            python3-setuptools quilt socat sshpass subversion tar texi2html texinfo unzip wget xsltproc xterm xz-utils \
            zip zlib1g-dev zstd fakeroot lz4 git-lfs

      - name: Set up python and shell
        run: |
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 1
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 2
          sudo update-alternatives --set python /usr/bin/python3
          sudo ln -sf /bin/bash /bin/sh
          echo fs.inotify.max_user_watches=524288 | sudo tee -a /etc/sysctl.conf
          sudo sysctl -n -w fs.inotify.max_user_watches=524288
          echo 'kernel.apparmor_restrict_unprivileged_userns=0' | sudo tee /etc/sysctl.d/60-apparmor-namespace.conf > /dev/null
          sudo sysctl --system

      - name: Set Git User
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "GitHub Actions"

      - name: Checkout build-enviroment (oe-alliance-core)
        run: |
          git clone https://github.com/oe-alliance/build-enviroment.git -b 5.5.1 openatv
          cd openatv
          make update

      - name: Add meta-local with dvb-hisi recipe
        run: |
          mkdir -p openatv/meta-local/recipes-dvb/dvb-hisi/files
          printf '%s\n' \
            'DESCRIPTION = "HiSilicon DVB driver from leandrotsampa"' \
            'LICENSE = "GPLv2"' \
            'LIC_FILES_CHKSUM = "file://COPYING;md5=751419260aa954499f7abaabaa882bbe"' \
            '' \
            'SRCREV = "${AUTOREV}"' \
            'PV = "1.0+git${SRCPV}"' \
            'PR = "r0"' \
            '' \
            'SRC_URI = "git://github.com/leandrotsampa/dvb-hisi.git;protocol=https;branch=main"' \
            'S = "${WORKDIR}/git"' \
            '' \
            'inherit module' \
            '' \
            'DEPENDS += "virtual/kernel"' \
            '' \
            'EXTRA_OEMAKE += "KERNELDIR=${STAGING_KERNEL_DIR}"' \
            '' \
            'do_compile() {' \
            '    oe_runmake' \
            '}' \
            '' \
            'do_install() {' \
            '    install -d ${D}${nonarch_base_libdir}/modules/${KERNEL_VERSION}/extra' \
            '    install -m 0644 *.ko ${D}${nonarch_base_libdir}/modules/${KERNEL_VERSION}/extra' \
            '}' \
            > openatv/meta-local/recipes-dvb/dvb-hisi/dvb-hisi_git.bb
          
          echo 'BBLAYERS += "${OEROOT}/meta-local"' >> openatv/builds/openatv/release/bblayers.conf
          echo 'IMAGE_INSTALL_append = " dvb-hisi"' >> openatv/builds/openatv/release/local.conf
          echo "DVB-Hisi recipe and layer configuration added."

      - name: Build Enigma2 image
        working-directory: openatv
        run: |
          MACHINE=sf8008 DISTRO=openatv DISTRO_TYPE=release make enigma2-image

      - name: Upload image artifacts
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: sf8008-enigma2-image
          path: openatv/builds/openatv/release/sf8008/images/sf8008/
